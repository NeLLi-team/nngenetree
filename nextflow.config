/*
 * NNGeneTree Nextflow Configuration
 * ==================================
 */

// Pipeline parameters
params {
    // Input/Output directories
    input_dir = 'test'
    output_dir = "${params.input_dir}_nngenetree"

    // BLAST database configuration
    blast_db = 'test/db/test_reference'
    blast_hits = 5
    closest_neighbors = 5

    // Query filtering (comma-separated list of prefixes)
    query_filter = ''

    // Visualization settings
    itol_tax_level = 'class'  // Options: domain, phylum, class, order, family, genus, species

    // Phylogenetic placement settings
    query_prefixes = 'Hype,Klos'
    num_neighbors_placement = 5
    self_hit_threshold = 0.001

    // Resource configuration (default values)
    resources {
        run_diamond_blastp {
            threads = 4
            mem_mb = 8000
            time = '10m'
        }
        align_sequences {
            threads = 4
            mem_mb = 8000
            time = '10m'
            disk_mb = 10000
        }
        build_tree {
            threads = 4
            mem_mb = 8000
            time = '10m'
        }
        extract_hits {
            threads = 1
            mem_mb = 4000
            time = '5m'
        }
    }

    // Advanced settings
    max_retries = 1
    error_strategy = 'retry'
}

// Process configuration defaults
process {
    // Error handling
    errorStrategy = params.error_strategy
    maxRetries = params.max_retries

    // Use Pixi conda environment
    conda = "${projectDir}/.pixi/envs/default"
}

// Execution report configuration
report {
    enabled = true
    file = "${params.output_dir}/nextflow_report.html"
}

timeline {
    enabled = true
    file = "${params.output_dir}/nextflow_timeline.html"
}

trace {
    enabled = true
    file = "${params.output_dir}/nextflow_trace.txt"
    fields = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes'
}

dag {
    enabled = true
    file = "${params.output_dir}/nextflow_dag.html"
}

// Include profile-specific configurations
includeConfig 'conf/base.config'

// Profile selection
profiles {
    standard {
        includeConfig 'conf/base.config'
    }

    test {
        includeConfig 'conf/test.config'
    }

    slurm {
        includeConfig 'conf/slurm.config'
    }

    local {
        process {
            executor = 'local'
            cpus = 16
        }
    }
}